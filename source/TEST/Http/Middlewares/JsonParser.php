<?php
/**
 * Spiral Framework.
 *
 * @license   MIT
 * @author    Anton Titov (Wolfy-J)
 * @copyright Â©2009-2015
 */
namespace Spiral\Http\Middlewares;

use Psr\Http\Message\ResponseInterface;
use Psr\Http\Message\ServerRequestInterface;
use Spiral\Http\MiddlewareInterface;

class JsonParser implements MiddlewareInterface
{
    /**
     * Handle request generate response. Middleware used to alter incoming Request and/or Response
     * generated by inner pipeline layers.
     *
     * @param ServerRequestInterface $request Server request instance.
     * @param \Closure               $next    Next middleware/target.
     * @return ResponseInterface
     */
    public function __invoke(ServerRequestInterface $request, \Closure $next = null)
    {
        if ($request->getHeaderLine('Content-Type') == 'application/json')
        {
            $jsonBody = $request->getBody()->__toString();

            return $next($request->withParsedBody(json_decode($jsonBody, true)));
        }

        return $next($request);
    }
}